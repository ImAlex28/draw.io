/*
    CREACIÓN DE TIPOS Y TABLAS PARA LAS RELACIONES EJEMPLARES-EJEMPLAR-LIBRO
*/

CREATE OR REPLACE TYPE EJEMPLAR_OBJ AS OBJECT (
    Id NUMBER,
    Estado VARCHAR2(50),
    Formato VARCHAR2(50),
    PrecioCoste NUMBER(10,2),
    Disponible VARCHAR2(50),
    DescuentoPremium NUMBER(5,2)
) NOT FINAL;
/

CREATE TYPE EJEMPLARES_TABTYP AS TABLE OF EJEMPLAR_OBJ;
/

CREATE OR REPLACE TYPE LIBRO_OBJ AS OBJECT (
    ISBN VARCHAR2(20),
    Titulo VARCHAR2(40),
    Autor VARCHAR2(255),
    Genero VARCHAR2(100),
    Idioma VARCHAR2(50),
    Sinopsis VARCHAR(255),
    ImagenPortada VARCHAR2(60),
    Ejemplares EJEMPLARES_TABTYP
);
/

CREATE OR REPLACE TYPE LIBROS_TABTYP AS TABLE OF REF LIBRO_OBJ;
/

CREATE TABLE LIBRO_TAB OF LIBRO_OBJ (
    ISBN PRIMARY KEY,
    Titulo NOT NULL,
    Autor NOT NULL
)
NESTED TABLE Ejemplares STORE AS EJEMPLARES_NTAB;
/

CREATE OR REPLACE TYPE EJEMPLARVENTA_OBJ UNDER EJEMPLAR_OBJ (
    PrecioVenta NUMBER(5,2)
);
/

CREATE TABLE EJEMPLARVENTA_TAB OF EJEMPLARVENTA_OBJ(
    CHECK(PrecioVenta > 0)
);
/

CREATE OR REPLACE TYPE EJEMPLARALQUILER_OBJ UNDER EJEMPLAR_OBJ (
    PrecioPorDia NUMBER(5,2),
    DuracionAlquiler NUMBER
);
/

CREATE TABLE EJEMPLARALQUILER_TAB OF EJEMPLARALQUILER_OBJ (
    CHECK(PrecioPorDia > 0),
    CHECK(DuracionAlquiler > 0)
);
/

/*
    CREACIÓN DE TIPOS Y TABLAS PARA LAS RELACIONES DE TRANSACCIÓN
*/

CREATE OR REPLACE TYPE TARJETA_OBJ AS OBJECT(
    Numero NUMBER,
    CVV NUMBER,
    FechaCaducidad DATE
);
/

CREATE TABLE TARJETA_TAB OF TARJETA_OBJ(
    Numero PRIMARY KEY,
    CVV NOT NULL,
    FechaCaducidad NOT NULL
);
/

CREATE OR REPLACE TYPE TRANSACCION_OBJ AS OBJECT(
    IdTransaccion NUMBER,
    Fecha DATE,
    Tarjeta REF TARJETA_OBJ,
    ImporteTotal NUMBER(10,2)
) NOT FINAL;
/

CREATE TABLE TRANSACCION_TAB OF TRANSACCION_OBJ(
    IdTransaccion PRIMARY KEY,
    Fecha NOT NULL,
    CHECK(ImporteTotal > 0)
);
/

CREATE TYPE TRANSACCIONES_TABTYP AS TABLE OF REF TRANSACCION_OBJ;
/

/*
    CREACIÓN DE TIPOS Y TABLAS PARA LAS RELACIONES DE USUARIO
*/

CREATE OR REPLACE TYPE DIRECCION_OBJ AS OBJECT(
    TipoDeVia VARCHAR2(255),
    Nombre VARCHAR2(255),
    Numero NUMBER,
    Puerta VARCHAR2(5),
    Piso NUMBER
);
/

CREATE TABLE DIRECCION_TAB OF DIRECCION_OBJ(
    TipoDeVia NOT NULL,
    Nombre NOT NULL,
    Numero NOT NULL
);
/

CREATE OR REPLACE TYPE USUARIO_OBJ AS OBJECT (
    Id NUMBER,
    Nombre VARCHAR2(255),
    CorreoElectronico VARCHAR2(255),
    Contrasena VARCHAR2(255),
    NumeroTlf VARCHAR2(20),
    FechaNacimiento DATE,
    DNI VARCHAR2(20),
    Transacciones TRANSACCIONES_TABTYP,
    Direccion REF DIRECCION_OBJ
) NOT FINAL;
/

CREATE TABLE USUARIO_TAB OF USUARIO_OBJ(
    Id PRIMARY KEY,
    DNI UNIQUE NOT NULL
) NESTED TABLE Transacciones STORE AS TRANSACCIONES_NTAB;
/

CREATE OR REPLACE TYPE CLIENTE_OBJ UNDER USUARIO_OBJ (
    Puntuacion NUMBER,
    TipoCuenta VARCHAR2(50)
);
/

CREATE OR REPLACE TYPE ADMINISTRADOR_OBJ UNDER USUARIO_OBJ (
    FechaDeAlta DATE
);
/

CREATE TABLE CLIENTE_TAB OF CLIENTE_OBJ
    NESTED TABLE Transacciones STORE AS TRANSACCIONES_CLIENTE_NTAB;
/

ALTER TABLE CLIENTE_TAB ADD CONSTRAINT chk_puntuacion CHECK (Puntuacion >= 0);
ALTER TABLE CLIENTE_TAB ADD CONSTRAINT chk_tipocuenta CHECK (TipoCuenta IN ('Basica', 'Premium'));
/

CREATE TABLE ADMINISTRADOR_TAB OF ADMINISTRADOR_OBJ
    NESTED TABLE Transacciones STORE AS TRANSACCIONES_ADMINISTRADOR_NTAB;
/

ALTER TABLE ADMINISTRADOR_TAB MODIFY FechaDeAlta NOT NULL;
/

CREATE OR REPLACE TYPE LINEA_PEDIDO_OBJ AS OBJECT(
    IdLineaPedido NUMBER,
    Cantidad NUMBER,
    PrecioUnitario NUMBER(10,2),
    Libro REF LIBRO_OBJ
);
/

CREATE OR REPLACE TYPE LINEAS_PEDIDO_TABTYP AS TABLE OF LINEA_PEDIDO_OBJ;
/

CREATE OR REPLACE TYPE PEDIDO_PROVEEDOR_OBJ AS OBJECT(
    Id NUMBER,
    Fecha DATE,
    Estado VARCHAR2(255),
    LineasPedido LINEAS_PEDIDO_TABTYP
);
/

CREATE OR REPLACE TYPE PEDIDO_PROVEEDOR_TABTYP AS TABLE OF REF PEDIDO_PROVEEDOR_OBJ;
/

CREATE TABLE PEDIDO_PROVEEDOR_TAB OF PEDIDO_PROVEEDOR_OBJ(
    Id PRIMARY KEY,
    Fecha NOT NULL,
    CHECK(Estado IN ('Pendiente', 'Recibido', 'Cancelado'))
) 
NESTED TABLE LineasPedido STORE AS LINEAS_PEDIDO_NTAB;
/

CREATE OR REPLACE TYPE PROVEEDOR_OBJ AS OBJECT(
    Id NUMBER,
    Email VARCHAR2(255),
    Nombre VARCHAR2(255),
    Telefono VARCHAR2(255),
    Pedidos PEDIDO_PROVEEDOR_TABTYP,
    Libros LIBROS_TABTYP
);
/

CREATE TABLE PROVEEDOR_TAB OF PROVEEDOR_OBJ(
    Id PRIMARY KEY,
    Nombre NOT NULL
) 
NESTED TABLE Pedidos STORE AS PEDIDOS_PROVEEDOR_NTAB,
NESTED TABLE Libros STORE AS LIBROS_NTAB;
/

CREATE OR REPLACE TYPE FACTURA_OBJ AS OBJECT(
    IdFactura NUMBER,
    PrecioTotal NUMBER,
    Comentario VARCHAR2(255),
    FechaEmision DATE,
    FechaVencimiento DATE,
    CosteEnvio NUMBER(5,2),
    Transacciones TRANSACCIONES_TABTYP,
    Lineas LINEAS_PEDIDO_TABTYP
);
/

CREATE TABLE FACTURA_TAB OF FACTURA_OBJ(
    IdFactura PRIMARY KEY,
    FechaEmision NOT NULL,
    FechaVencimiento NOT NULL
) 
NESTED TABLE Lineas STORE AS LINEAS_FACTURA_NTAB,
NESTED TABLE Transacciones STORE AS TRANSACCIONES2_NTAB;
/

ALTER TABLE FACTURA_TAB ADD CONSTRAINT chk_precio_total CHECK (PrecioTotal > 0);
ALTER TABLE FACTURA_TAB ADD CONSTRAINT chk_coste_envio CHECK (CosteEnvio > 0);
/
